apiVersion: install.istio.io/v1alpha2
kind: IstioControlPlane
spec:
  # Turn on node agent component
  security:
    components:
      nodeAgent:
        enabled: true
      citadel:
        enabled: false

  trafficManagement:
    components:
      # The default profile is tuned to fit on smaller clusters. Increase the requests and HPA
      # a bit to ensure we can handle larger scale clusters.
      pilot:
        k8s:
          resources:
            requests:
              cpu: 2000m

  gateways:
    components:
      # Egress is supported but not default
      egressGateway:
        enabled: false

  # Policy is not supported
  policy:
    enabled: false

  # Telemetry here refers to mixer telemetry. We will enable telemetry v2 instead
  telemetry:
    enabled: false

  values:
    # Protocol sniffing is not supported
    pilot:
      enableProtocolSniffingForOutbound: false
      enableProtocolSniffingForInbound: false

    # Grafana is disabled by default, but supported with --set values.grafana.enabled=true
    # This requires enabling prometheus.
    grafana:
      enabled: false

    # Prometheus is disabled by default, but supported with --set values.prometheus.enabled=true
    prometheus:
      enabled: false

    # Set up SDS with Google Mesh CA.
    nodeagent:
      image: node-agent-k8s
      env:
        CA_PROVIDER: "GoogleCA"
        CA_ADDR: "meshca.googleapis.com:443"
        PLUGINS: "GoogleTokenExchange"
        VALID_TOKEN: true

    # Enable SDS on ingress
    gateways:
      istio-ingressgateway:
        sds:
          enabled: true

    # Enable telemetry v2 backend by Stackdriver.
    # Prometheus is also supported with --set values.telemetry.v2.prometheus.enabled=true --set prometheus.enabled=true
    telemetry:
      enabled: true
      v1:
        enabled: false
      v2:
        enabled: true
        prometheus:
          enabled: false
        stackdriver:
          enabled: true
          logging: true
          topology: true

    sidecarInjectorWebhook:
      rewriteAppHTTPProbe: true

    global:
      proxy:
        # Protocol detection timeout is not supported
        protocolDetectionTimeout: 0s

      # Locality load balancing is not supported
      localityLbSetting:
        enabled: false

      # Enable permissive mTLS by default
      mtls:
        enabled: false

      # Enable SDS
      sds:
        enabled: true
        udsPath: "unix:/var/run/sds/uds_path"
        token:
          aud: "idns"
      sts:
        servicePort: 15463

      # Use Kubernetes CA to provision Galley and Sidecar-Injector webhook certificates.
      certificates:
        - secretName: dns.istio-galley-service-account
          dnsNames: [istio-galley.istio-system.svc, istio-galley.istio-system]
        - secretName: dns.istio-sidecar-injector-service-account
          dnsNames: [istio-sidecar-injector.istio-system.svc, istio-sidecar-injector.istio-system]
